---
Description: 'Create instances ready for CodeDeploy: Create up to 3 Amazon EC2 instances
  with an associated instance profile and install the AWS CodeDeploy Agent. **WARNING**
  This template creates one or more Amazon EC2 instances. You will be billed for the
  AWS resources used if you create a stack from this template. Copyright [2012-2014]
  Amazon.com, Inc. or its affiliates. All Rights Reserved. Licensed under the Apache
  License, Version 2.0 (the "License"). You may not use this file except in compliance
  with the License. A copy of the License is located at http://aws.amazon.com/apache2.0/
  or in the "license" file accompanying this file. This file is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and limitations
  under the License.'
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  TagKey:
      Description: The EC2 tag key that identifies this as a target for deployments.
      Type: String
      Default: Name
      AllowedPattern: "[\\x20-\\x7E]*"
      ConstraintDescription: Can contain only ASCII characters.
  TagValue:
    Description: The EC2 tag value that identifies this as a target for deployments.
    Type: String
    Default: CodeDeployDemo
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: Can contain only ASCII characters.
  KeyPairName:
    Description: Name of an existing Amazon EC2 key pair to enable SSH or RDP access
      to the instances.
    Type: String
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: KeyPairName is a required Field and can contain only ASCII
      characters.
  InstanceType:
    Description: Amazon EC2 instance type.
    Type: String
    Default: t2.micro
    ConstraintDescription: Must be a valid Amazon EC2 instance type.
  SSHLocation:
    Description: The IP address range that can be used to connect using SSH or RDP
      to the Amazon EC2 instances.
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.

Resources: 
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: My SG with port 22, 8080 and 80 inbound
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
  MyVMInstance:
    Type: AWS::EC2::Instance               
    Properties:
      ImageId: ami-03c53cb2507dda8ae
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      Tags:
        - Key:
            Ref: TagKey
          Value:
            Ref: TagValue
      SecurityGroups:
        - !Ref MySecurityGroup
      UserData:
         Fn::Base64: 
            !Sub |
              #!/bin/bash
              sudo apt-get update
              sudo apt-get apache2-bin -y
              sudo apt-get update -y
              sudo apt-get install ruby-full -y
              sudo apt-get install wget -y
              cd /home/ubuntu
              wget https://aws-codedeploy-us-east-1.s3.us-east-1.amazonaws.com/latest/install
              chmod +x ./install
              sudo ./install auto
              sudo service codedeploy-agent status


  CodeDeployTrustRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Sid: '1'
          Effect: Allow
          Principal:
            Service:
            - codedeploy.us-east-1.amazonaws.com
            - codedeploy.us-west-2.amazonaws.com
          Action: sts:AssumeRole
      Path: "/"
  CodeDeployRolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CodeDeployPolicy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Resource:
          - "*"
          Action:
          - ec2:Describe*
        - Effect: Allow
          Resource:
          - "*"
          Action:
          - autoscaling:CompleteLifecycleAction
          - autoscaling:DeleteLifecycleHook
          - autoscaling:DescribeLifecycleHooks
          - autoscaling:DescribeAutoScalingGroups
          - autoscaling:PutLifecycleHook
          - autoscaling:RecordLifecycleActionHeartbeat
      Roles:
      - Ref: CodeDeployTrustRole
  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
  InstanceRolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: InstanceRole
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - ec2:*
          - codedeploy:*
          - autoscaling:Describe*
          - cloudformation:Describe*
          - cloudformation:GetTemplate
          - s3:Get*
          Resource: "*"
      Roles:
      - Ref: InstanceRole
  InstanceRoleInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - Ref: InstanceRole
Outputs:
  CodeDeployTrustRoleARN:
    Value:
      Fn::GetAtt:
      - CodeDeployTrustRole
      - Arn

